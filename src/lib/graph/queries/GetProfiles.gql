query profiles($request: ProfileQueryRequest!, $userProfileId: ProfileId!) {
    profiles(request: $request) {
        __typename
        items {
            __typename
            isFollowedByMe
            isFollowing(who: $userProfileId)
            onChainIdentity {
                ens {
                    name
                }
                proofOfHumanity
                sybilDotOrg {
                    source {
                        twitter {
                            handle
                        }
                    }
                    verified
                }
                worldcoin {
                    isHuman
                }
            }
            followModule {
                ... on FeeFollowModuleSettings {
                    __typename
                    type
                    recipient
                    contractAddress
                    amount {
                        asset {
                            address
                            decimals
                            name
                            symbol
                        }
                        value
                    }
                }
                ... on ProfileFollowModuleSettings {
                    __typename
                    type
                    contractAddress
                }
                ... on RevertFollowModuleSettings {
                    __typename
                    type
                    contractAddress
                }
                ... on UnknownFollowModuleSettings {
                    __typename
                    type
                    followModuleReturnData
                    contractAddress
                }
            }
            attributes {
                displayType
                key
                traitType
                value
            }
            bio
            coverPicture {
                ... on NftImage {
                    __typename
                    chainId
                    contractAddress
                    tokenId
                    uri
                    verified
                }
                ... on MediaSet {
                    __typename
                    original {
                        altTag
                        cover
                        mimeType
                        url
                    }
                    onChain {
                        altTag
                        cover
                        mimeType
                        url
                    }
                }
            }
            dispatcher {
                address
                canUseRelay
                sponsor
            }
            followNftAddress
            handle
            id
            interests
            isDefault
            metadata
            name
            ownedBy
            picture {
                ... on NftImage {
                    __typename
                    chainId
                    contractAddress
                    tokenId
                    uri
                    verified
                }
                ... on MediaSet {
                    __typename
                    original {
                        url
                        mimeType
                        cover
                        altTag
                    }
                    onChain {
                        url
                        mimeType
                        cover
                        altTag
                    }
                }
            }
            stats {
                totalPublications
                totalPosts
                totalMirrors
                totalFollowing
                totalFollowers
                totalComments
                totalCollects
                publicationsTotal(forSources: "")
                postsTotal(forSources: "")
                mirrorsTotal(forSources: "")
                id
                commentsTotal(forSources: "")
            }
        }
        pageInfo {
            prev
            next
            totalCount
        }
    }
}